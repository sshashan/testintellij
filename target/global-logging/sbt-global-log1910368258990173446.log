[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\d962488\AppData\Local\Temp\idea6.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\d962488\AppData\Local\Temp\idea6.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.7 (Oracle Corporation Java 1.8.0_261)
[debug]       Load.loadUnit: plugins took 104.602ms
[debug]       Load.loadUnit: defsScala took 0.2918ms
[debug] [Loading] Scanning directory C:\Users\d962488\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\d962488\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 19.8958 ms
[debug]           Load.resolveProject(global-plugins) took 43.4213ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\d962488\.sbt\1.0\plugins, plugins: List(<none>))) took 86.1255ms
[debug] [Loading] Done in C:\Users\d962488\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 104.5912ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.2111ms
[debug]     Load.loadUnit(file:/C:/Users/d962488/.sbt/1.0/plugins/, ...) took 216.7287ms
[debug]   Load.apply: load took 359.0663ms
[debug]   Load.apply: resolveProjects took 5.7507ms
[debug]   Load.apply: finalTransforms took 55.7691ms
[debug]   Load.apply: config.delegates took 6.8852ms
[debug]   Load.apply: Def.make(settings)... took 1148.9638ms
[debug]   Load.apply: structureIndex took 119.1179ms
[debug]   Load.apply: mkStreams took 2.3585ms
[info] loading global plugins from C:\Users\d962488\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 4047.1198ms
[debug]           Load.loadUnit: plugins took 26.2477ms
[debug]           Load.loadUnit: defsScala took 0.0031ms
[debug] [Loading] Scanning directory C:\Users\d962488\IdeaProjects\retailDataBricks\project
[debug]             Load.loadUnit: mkEval took 16.9912ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\d962488\IdeaProjects\retailDataBricks\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.5444 ms
[info] loading settings for project retaildatabricks-build from idea6.sbt ...
[debug]               Load.resolveProject(retaildatabricks-build) took 2.4272ms
[debug]             Load.loadTransitive: finalizeProject(Project(id retaildatabricks-build, base: C:\Users\d962488\IdeaProjects\retailDataBricks\project, plugins: List(<none>))) took 4.4543ms
[debug] [Loading] Done in C:\Users\d962488\IdeaProjects\retailDataBricks\project, returning: (retaildatabricks-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 2400.0201ms
[debug]           Load.loadUnit: cleanEvalClasses took 4.4911ms
[debug]         Load.loadUnit(file:/C:/Users/d962488/IdeaProjects/retailDataBricks/project/, ...) took 2431.9801ms
[debug]       Load.apply: load took 2433.2803ms
[debug]       Load.apply: resolveProjects took 0.0868ms
[debug]       Load.apply: finalTransforms took 14.6592ms
[debug]       Load.apply: config.delegates took 0.4984ms
[debug]       Load.apply: Def.make(settings)... took 223.1394ms
[debug]       Load.apply: structureIndex took 32.8876ms
[debug]       Load.apply: mkStreams took 0.0033ms
[info] loading project definition from C:\Users\d962488\IdeaProjects\retailDataBricks\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 3850.2591ms
[debug]     Load.loadUnit: defsScala took 0.0028ms
[debug] [Loading] Scanning directory C:\Users\d962488\IdeaProjects\retailDataBricks
[debug]       Load.loadUnit: mkEval took 1.7456ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\d962488\IdeaProjects\retailDataBricks, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))), Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 3.1306 ms
[info] loading settings for project retaildatabricks from build.sbt ...
[debug]         Load.resolveProject(retaildatabricks) took 42.9652ms
[debug]       Load.loadTransitive: finalizeProject(Project(id retaildatabricks, base: C:\Users\d962488\IdeaProjects\retailDataBricks, plugins: List(<none>))) took 47.6189ms
[debug] [Loading] Done in C:\Users\d962488\IdeaProjects\retailDataBricks, returning: (retaildatabricks)
[debug]     Load.loadUnit: loadedProjectsRaw took 1882.8186ms
[debug]     Load.loadUnit: cleanEvalClasses took 105.6911ms
[debug]   Load.loadUnit(file:/C:/Users/d962488/IdeaProjects/retailDataBricks/, ...) took 5839.6857ms
[debug] Load.apply: load took 5841.8569ms
[debug] Load.apply: resolveProjects took 0.1962ms
[debug] Load.apply: finalTransforms took 32.9325ms
[debug] Load.apply: config.delegates took 0.4616ms
[debug] Load.apply: Def.make(settings)... took 125.8385ms
[debug] Load.apply: structureIndex took 30.9348ms
[debug] Load.apply: mkStreams took 0.003ms
[info] set current project to retailDataBricks (in build file:/C:/Users/d962488/IdeaProjects/retailDataBricks/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 62242 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 62242, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to retailDataBricks (in build file:/C:/Users/d962488/IdeaProjects/retailDataBricks/)
[debug] > Exec(idea-shell, None, None)
